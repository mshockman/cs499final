{"version":3,"sources":["webpack://pendora/webpack/universalModuleDefinition","webpack://pendora/webpack/bootstrap","webpack://pendora/./src/js/testapi.js"],"names":["Tabs","selector","bar","$","tabs","find","on","event","target","closest","tab","getTabId","removeClass","addClass","tabId","element","jquery","data","dataset","csvToQueryString","key","csv","split","params","item","push","join","apiReadTest","$context","tickerField","ticker","val","url","fetch","response","json","results","text","JSON","stringify","apiListTest","tickers","apiTopTest","industry","getFormData","r","each","index","name","apiCreateTest","method","headers","body","apiUpdateTest","apiDeleteTest","prop","remove"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAQ,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAiB,4BAA4B;AAC7C;AACA;AACA,0BAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAgB,uBAAuB;AACvC;;;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AAGA;;;;IAGMA,I;;;AACF,gBAAYC,QAAZ,EAAsB;AAAA;;AAAA;;AAClB,SAAKC,GAAL,GAAWC,CAAC,CAACF,QAAD,CAAZ;AACA,SAAKG,IAAL,GAAY,KAAKF,GAAL,CAASG,IAAT,CAAc,UAAd,CAAZ;AAEA,SAAKH,GAAL,CAASI,EAAT,CAAY,OAAZ,EAAqB,UAACC,KAAD,EAAW;AAC5B,UAAIC,MAAM,GAAGL,CAAC,CAACI,KAAK,CAACC,MAA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","file":"testapi.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pendora\"] = factory();\n\telse\n\t\troot[\"pendora\"] = factory();\n})(window, function() {\nreturn "," \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"testapi\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \tvar jsonpArray = window[\"webpackJsonppendora\"] = window[\"webpackJsonppendora\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/js/testapi.js\",\"vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import '@babel/polyfill';\r\n\r\n\r\n/**\r\n * Controls test tabs.\r\n */\r\nclass Tabs {\r\n    constructor(selector) {\r\n        this.bar = $(selector);\r\n        this.tabs = this.bar.find('.tab-btn');\r\n\r\n        this.bar.on('click', (event) => {\r\n            let target = $(event.target).closest('.tab-btn', this.bar),\r\n                tab = Tabs.getTabId(target);\r\n\r\n            if(target) {\r\n                this.tabs.removeClass('active');\r\n                target.addClass('active');\r\n\r\n                for(let tab of this.tabs) {\r\n                    let tabId = Tabs.getTabId(tab);\r\n                    $(tabId).removeClass('open');\r\n                }\r\n\r\n                $(tab).addClass('open');\r\n            }\r\n        });\r\n    }\r\n\r\n    static getTabId(element) {\r\n        if(element.jquery) {\r\n            return element.data('tab');\r\n        } else {\r\n            return element.dataset.tab;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction csvToQueryString(key, csv) {\r\n    csv = csv.split(/\\s*,\\s*/);\r\n    let params = [];\r\n\r\n    for(let item of csv) {\r\n        params.push(`${key}=${item}`);\r\n    }\r\n\r\n    return params.join('&');\r\n}\r\n\r\n\r\nasync function apiReadTest() {\r\n    let $context = $(\"#read_test\"),\r\n        tickerField = $context.find('[name=\"ticker\"]'),\r\n        ticker = tickerField.val();\r\n\r\n    let url = `/api/stocks/read?ticker=${ticker}`;\r\n\r\n    let response = await fetch(url),\r\n        results = await response.json();\r\n\r\n    $('#output').text(JSON.stringify(results));\r\n}\r\n\r\n\r\nasync function apiListTest() {\r\n    let $context = $(\"#list_test\"),\r\n        tickers = $context.find(\"[name='tickers']\").val(),\r\n        params = csvToQueryString('tickers', tickers);\r\n\r\n    let url = `/api/stocks/list?${params}`;\r\n\r\n    let response = await fetch(url),\r\n        results = await response.json();\r\n\r\n    $('#output').text(JSON.stringify(results));\r\n}\r\n\r\n\r\nasync function apiTopTest() {\r\n    let $context = $(\"#top_test\"),\r\n        industry = $context.find(\"[name='industry']\").val();\r\n\r\n    let url = `/api/stocks/top?industry=${industry}`;\r\n\r\n    let response = await fetch(url),\r\n        results = await response.json();\r\n\r\n    $('#output').text(JSON.stringify(results));\r\n}\r\n\r\n\r\nfunction getFormData($context) {\r\n    let r = {};\r\n\r\n    $context.find('form input').each((index, element) => {\r\n        if(element.name) {\r\n            r[element.name] = $(element).val();\r\n        }\r\n    });\r\n\r\n    return r;\r\n}\r\n\r\n\r\nasync function apiCreateTest() {\r\n    let $context = $('#create_test'),\r\n        data = getFormData($context),\r\n        url = `/api/stocks/create`;\r\n\r\n    let response = await fetch(url, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }),\r\n        results = await response.json();\r\n\r\n    $('#output').text(JSON.stringify(results));\r\n}\r\n\r\n\r\nasync function apiUpdateTest() {\r\n    let $context = $('#update_test'),\r\n        data = getFormData($context),\r\n        url = `/api/stocks/update`;\r\n\r\n    let response = await fetch(url, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }),\r\n        results = await response.json();\r\n\r\n    $('#output').text(JSON.stringify(results));\r\n}\r\n\r\n\r\nasync function apiDeleteTest() {\r\n    let $context = $('#delete_test'),\r\n        tickers = $context.find(\"[name='tickers']\").val(),\r\n        params = csvToQueryString('tickers', tickers);\r\n\r\n    let url = `/api/stocks/delete?${params}`;\r\n\r\n    let response = await fetch(url),\r\n        results = await response.json();\r\n\r\n    $('#output').text(JSON.stringify(results));\r\n}\r\n\r\n\r\n$(function() {\r\n    new Tabs(\"#tabbar\");\r\n\r\n    $(\"#update_test .modal-title\").text(\"Update Stock\");\r\n    $(\"#update_test form\").prop('action', 'javascript:void(0)');\r\n    $(\"#update_test form button\").remove();\r\n\r\n    $(\"#create_test form\").prop('action', 'javascript:void(0)');\r\n    $(\"#create_test form button\").remove();\r\n\r\n    $('#api-read-btn').on('click', apiReadTest);\r\n    $('#api-list-btn').on('click', apiListTest);\r\n    $('#api-top-btn').on('click', apiTopTest);\r\n    $('#api-create-btn').on('click', apiCreateTest);\r\n    $('#api-update-btn').on('click', apiUpdateTest);\r\n    $('#api-delete-btn').on('click', apiDeleteTest);\r\n});"],"sourceRoot":""}